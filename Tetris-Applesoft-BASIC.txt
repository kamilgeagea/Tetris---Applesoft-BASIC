10 REM -- TETRIS
20 HOME
22 LVL = 800
25 LWALL = 15
30 RWALL = 26
32 BHIGHT = 24
33 BWIDTH = RWALL - LWALL + 1 
34 SSIZ = 5
35 SCNT = 7
36 SHPSD = 20
37 LKEY = 136 : RKEY = 149 : UKEY = 139
38 PTS = 0  : HSTPT = 0
39 REM ---- DEFINE BOARD MATRIX
40 DIM BRD%(BHIGHT+1, BWIDTH)
42 DIM BCPY%(BHIGHT+1, BWIDTH)
45 DIM HP%(SSIZ) : DIM VP%(SSIZ) : DIM RHP%(SSIZ) : DIM RVP%(SSIZ) : DIM RTR% (SSIZ)
50 KBD = 0
60 GOSUB 800 : REM ---- DRAW WALLS AND INITIALIZE BOARD



80 REM ----- MAIN LOOP
85 SHP = INT (RND (SHPSD) * SCNT) + 1
90 SHPSD = SHP
95 ON SHP GOSUB 20000, 20100, 20200, 20300, 20400, 20500, 20600 : REM ---- DEFINE SHAPE
98 FM = 1 : REM IT IS FIRST MOVE
100 COLL = 0
110 DRW = 1
120 GOSUB 30000 : REM ---- NOW DRAW SHAPE
130 GOSUB 60000 : REM ---- DEBUG POSITION
200 GOSUB 2000 : REM ---- WAIT before erase
210 GOSUB 45500 : REM ---- DETECT DOWN COLLISION 
215 IF COLL = 1 AND FM = 1 THEN HOME : PRINT "GAME OVER, SCORE = "; PTS : END
216 FM = 0 : REM NOT FIRST MOVE ANYMORE
220 IF COLL = 1 THEN GOSUB 50000 : GOSUB 55500 : GOSUB 55000 : GOTO 80
225 REM IF COLLISION, UPDATE BOARD WITH SHAPE VAL, CHECK HIGEST BRICK POS, CHECK ROWS TO REMOVE
230 DRW = 0
260 GOSUB 30000 : REM ---- ERASE SHAPE
300 GOSUB 1000 : REM ---- WAIT + KBD PRESS CHECK
330 GOSUB 40000 : REM ---- MOVE SHAPE DOWN ONE ROW
360 GOTO 100



799 REM ---- DRAW WALLS AND INITIALIZE BOARD
800 FOR V = 1 TO BHIGHT
810 HTAB LWALL
820 VTAB V
830 PRINT "]";
840 HTAB RWALL
845 VTAB V
850 PRINT "[";
855 BRD%(V,0) = 1 : BRD%(V,BWIDTH-1) = 1
860 NEXT
865 REM ---- POPULATE AND WALL
870 FOR J = 1 TO BWIDTH 
875 BRD%(BHIGHT,J) = 1
877 HTAB J + LWALL - 1: VTAB BHIGHT : PRINT "]";
880 NEXT 
890 RETURN
900 END


999 REM ---- WAIT ROUTINE + KBD CHECK
1000 REM FOR I = 1 TO 10
1010 KEY = PEEK (-16384)
1020 if KEY > 128 then KBD=KEY
1030 if KEY > 128 then DUM=PEEK (-16368)
1040 IF KBD = LKEY THEN GOSUB 40100 : GOTO 1070 
1050 IF KBD = RKEY THEN GOSUB 40200 : GOTO 1070
1060 IF KBD = UKEY THEN GOSUB 40300 : GOTO 1070
1070 KBD = 0
1080 REM NEXT I
1090 RETURN


2000 FOR J = 1 to LVL
2010 next j
2020 return

9999 REM ---- CHECK KBD CODE
10000 PRINT PEEK (49152)
10010 GOTO 10000


20000 REM---- shape L
20010 NPIX = 4
20025 hp% (0) = 5 : VP% (0) = 1
20030 hp% (1) = 6 : VP% (1) = 1
20040 hp% (2) = 5 : VP% (2) = 2
20050 hp% (3) = 5 : VP% (3) = 3
20060 CTRT = 2
20090 return


20100 REM---- shape I
20110 NPIX = 4
20125 hp% (0) = 5 : VP% (0) = 1
20130 hp% (1) = 5 : VP% (1) = 2
20140 hp% (2) = 5 : VP% (2) = 3
20150 hp% (3) = 5 : VP% (3) = 4
20160 CTRT = 2
20190 return
 
20200 REM---- shape Square
20210 NPIX = 4
20225 hp% (0) = 5 : VP% (0) = 1
20230 hp% (1) = 6 : VP% (1) = 1
20240 hp% (2) = 5 : VP% (2) = 2
20250 hp% (3) = 6 : VP% (3) = 2
20260 CTRT = 0
20290 return

20300 REM---- L2
20310 NPIX = 4
20325 hp% (0) = 5 : VP% (0) = 1
20330 hp% (1) = 6 : VP% (1) = 1
20340 hp% (2) = 6 : VP% (2) = 2
20350 hp% (3) = 6 : VP% (3) = 3
20360 CTRT = 2
20390 return

20400 REM---- T
20410 NPIX = 4
20425 hp% (0) = 4 : VP% (0) = 1
20430 hp% (1) = 5 : VP% (1) = 1
20440 hp% (2) = 6 : VP% (2) = 1
20450 hp% (3) = 5 : VP% (3) = 2
20460 CTRT = 1
20490 return

20500 REM---- shape Z1
20510 NPIX = 4
20525 hp% (0) = 5 : VP% (0) = 1
20530 hp% (1) = 5 : VP% (1) = 2
20540 hp% (2) = 6 : VP% (2) = 2
20550 hp% (3) = 6 : VP% (3) = 3
20560 CTRT = 2
20590 return

20600 REM---- shape Z2
20610 NPIX = 4
20625 hp% (0) = 5 : VP% (0) = 1
20630 hp% (1) = 5 : VP% (1) = 2
20640 hp% (2) = 4 : VP% (2) = 2
20650 hp% (3) = 4 : VP% (3) = 3
20660 CTRT = 2
20690 return


30000 REM----- draw shape
30010 for pix = 0 to npix-1
30020 HTAB LWALL + hp%(pix): VTAB VP%(pix)
30030 if drw then print chr$(127) : GOTO 30040
30035 PRINT chr$(32)
30040 next pix
30050 return

40000 REM--- MOVE DOWN
40010 FOR COUNT = 0 TO NPIX-1
40020 VP% (COUNT) = VP%(COUNT) +1
40030 NEXT
40040 RETURN 

40100 REM--- MOVE LEFT
40104 FOR COUNT = 0 TO NPIX-1
40105 IF BRD%(VP% (COUNT)+1, HP%(COUNT)-1) = 1 THEN GOTO 40140
40109 NEXT
40110 FOR COUNT = 0 TO NPIX-1
40120 HP% (COUNT) = HP% (COUNT) - 1
40130 NEXT
40140 RETURN

40200 REM--- MOVE RIGHT
40204 FOR COUNT = 0 TO NPIX-1
40205 IF BRD%(VP% (COUNT)+1, HP%(COUNT)+1) = 1 THEN GOTO 40240
40209 NEXT
40210 FOR COUNT = 0 TO NPIX-1
40220 HP% (COUNT) = HP% (COUNT)  + 1
40230 NEXT
40240 RETURN

40300 REM--- ROTATE
40305 IF CTRT = 0 GOTO 40350
40310 FOR COUNT = 0 TO NPIX-1
40320 RHP%(COUNT) = -1 * (VP%(COUNT) - VP%(CTRT))
40325 RVP%(COUNT) = HP%(COUNT) - HP%(CTRT)
40335 IF BRD%(VP%(CTRT) + RVP% (COUNT), HP%(CTRT) + RHP%(COUNT)) = 1 THEN GOTO 40350
40340 NEXT
40345 FOR COUNT = 0 TO NPIX-1
40346 HP% (COUNT) = HP%(CTRT) + RHP% (COUNT) : VP% (COUNT) = VP%(CTRT) + RVP%(COUNT)
40347 NEXT
40350 RETURN

45500 REM ---- DETECT DOWN COLLISION
45510 FOR I = 0 TO NPIX-1
45520 IF BRD%(VP%(I)+1, HP%(I)) = 1 THEN COLL = 1 : GOTO 45600
45530 NEXT
45600 RETURN

50000 REM ---- POPULATE BOARD ARRAY WITH SHAPE VALUE
50010 FOR I = 0 TO NPIX-1 
50020 BRD%(VP%(I), HP%(I)) = 1
50030 NEXT
50040 RETURN

55000 REM ---- CHECK IF ANY COMPLETE ROW WITHIN SHAPE RANGE
55001 TETRIS = 1
55002 RTRC = 0
55003 FOR R = 0 TO NPIX-1 : RTR%(R) = -1 : NEXT
55010 FOR R = 0 TO NPIX-1
55020 FOR C = 1 TO BWIDTH -2 : REM EXCLUDE WALLS
55030 IF BRD%(VP%(R), C) = 0 THEN TETRIS = 0 : GOTO 55100
55040 NEXT C
55045 FOR X = 0 TO NPIX-1 
55046 IF RTR%(X) = VP%(R) THEN GOTO 55100 
55047 NEXT X
55050 RTR%(R) = VP%(R) : REM ROW TO BE REMOVED LATER
55055 RTRC = RTRC + 1
55060 PTS = PTS + 4 : REM ONE ROW TO BE REMOVED ADD 4 POINTS
55070 IF LVL > 100 THEN LVL = LVL - 10
55100 NEXT R
55125 IF TETRIS = 1 THEN PTS = PTS + 16 : REM ADD A BONUS WHEN 4 LINES REMOVED
55150 IF RTRC > 0 THEN GOSUB 56500 : REM ---- REMOVE MARKED LINES
55200 RETURN

55500 REM ---- DETECT HIGHEST BRICK AVALABLE ON BOARD
55510 HSTPT = 0 : REM RESET HIGHEST POINT
55520 FOR R = 1 TO BHIGHT
55530 FOR C = 1 TO BWIDTH -2
55540 IF BRD%(R, C) = 1 THEN HSTPT = R : GOTO 55700 : REM WE GOT THE EVEREST
55550 NEXT C
55560 NEXT R
55700 RETURN


56500 REM ---- COPY BOARD TO A NEW ONE SKIPPING ROWS TO BE REMOVED
56505 ITR = 0
56510 FOR I = NPIX -1 TO 0 STEP -1
56515 IF RTR%(I) = -1 THEN GOTO 56580
56520 OBI = RTR%(I) + ITR : REM CATER FOR ANY ALREADY SLID ROW BY ADDING ITR
56525 ITR = ITR + 1 : REM NEXT ROW TO REMOVE WILL BE SLID BY ONE EXTRA ROW
56530 FOR NBI = OBI-1 TO 1 STEP -1
56540 FOR C = 1 TO BWIDTH-2
56550 BRD%(NBI+1,C) = BRD% (NBI,C)
56560 NEXT C
56570 NEXT NBI
56580 NEXT I : REM CHECK NEXT ROW
56600 REM ---- NOW REDRAW ENTIRE BOARD
58000 FOR V = HSTPT TO BHIGHT - 1
58025 FOR C = 1 TO BWIDTH - 2
58027 HTAB LWALL + C : VTAB v
58030 IF BRD%(V, C) = 1 THEN PRINT CHR$(127); : GOTO 58060
58035 PRINT " ";
58060 NEXT C
58070 NEXT V
58100 RETURN


60000 REM ---- DEBUG POSITION
60030 HTAB 1 : VTAB 2 : PRINT "SCORE = "; PTS
60040 HTAB 1 : VTAB 4 : PRINT "L: LFT AR"
60050 HTAB 1 : VTAB 5 : PRINT "R: RGT AR"
60060 HTAB 1 : VTAB 6 : PRINT "ROT: UP AR"
60100 RETURN
